// Generated by view binder compiler. Do not edit!
package com.sr.techhelper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.sr.techhelper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StudentListItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView editStudentImage;

  @NonNull
  public final ConstraintLayout studentListItem;

  @NonNull
  public final CheckBox studentRowCheckBox;

  @NonNull
  public final TextView studentRowIdTextView;

  @NonNull
  public final TextView studentRowNameTextView;

  private StudentListItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView editStudentImage, @NonNull ConstraintLayout studentListItem,
      @NonNull CheckBox studentRowCheckBox, @NonNull TextView studentRowIdTextView,
      @NonNull TextView studentRowNameTextView) {
    this.rootView = rootView;
    this.editStudentImage = editStudentImage;
    this.studentListItem = studentListItem;
    this.studentRowCheckBox = studentRowCheckBox;
    this.studentRowIdTextView = studentRowIdTextView;
    this.studentRowNameTextView = studentRowNameTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StudentListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StudentListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.student_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StudentListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edit_student_image;
      ImageView editStudentImage = ViewBindings.findChildViewById(rootView, id);
      if (editStudentImage == null) {
        break missingId;
      }

      ConstraintLayout studentListItem = (ConstraintLayout) rootView;

      id = R.id.student_row_check_box;
      CheckBox studentRowCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (studentRowCheckBox == null) {
        break missingId;
      }

      id = R.id.student_row_id_text_view;
      TextView studentRowIdTextView = ViewBindings.findChildViewById(rootView, id);
      if (studentRowIdTextView == null) {
        break missingId;
      }

      id = R.id.student_row_name_text_view;
      TextView studentRowNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (studentRowNameTextView == null) {
        break missingId;
      }

      return new StudentListItemBinding((ConstraintLayout) rootView, editStudentImage,
          studentListItem, studentRowCheckBox, studentRowIdTextView, studentRowNameTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
