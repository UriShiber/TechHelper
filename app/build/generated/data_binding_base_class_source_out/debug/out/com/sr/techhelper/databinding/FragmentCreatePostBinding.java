// Generated by view binder compiler. Do not edit!
package com.sr.techhelper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.sr.techhelper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreatePostBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText addPostDescriptionEditText;

  @NonNull
  public final TextInputLayout addPostDescriptionTextInputLayout;

  @NonNull
  public final TextInputEditText addPostTitleEditText;

  @NonNull
  public final TextInputLayout addPostTitleTextInputLayout;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final LinearLayout createPostForm;

  @NonNull
  public final ImageView createPostImage;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final TextView titleTextView;

  private FragmentCreatePostBinding(@NonNull ScrollView rootView,
      @NonNull TextInputEditText addPostDescriptionEditText,
      @NonNull TextInputLayout addPostDescriptionTextInputLayout,
      @NonNull TextInputEditText addPostTitleEditText,
      @NonNull TextInputLayout addPostTitleTextInputLayout, @NonNull Button cancelButton,
      @NonNull LinearLayout createPostForm, @NonNull ImageView createPostImage,
      @NonNull TextView descriptionTextView, @NonNull ConstraintLayout main,
      @NonNull Button saveButton, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.addPostDescriptionEditText = addPostDescriptionEditText;
    this.addPostDescriptionTextInputLayout = addPostDescriptionTextInputLayout;
    this.addPostTitleEditText = addPostTitleEditText;
    this.addPostTitleTextInputLayout = addPostTitleTextInputLayout;
    this.cancelButton = cancelButton;
    this.createPostForm = createPostForm;
    this.createPostImage = createPostImage;
    this.descriptionTextView = descriptionTextView;
    this.main = main;
    this.saveButton = saveButton;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreatePostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreatePostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreatePostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_post_description_edit_text;
      TextInputEditText addPostDescriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (addPostDescriptionEditText == null) {
        break missingId;
      }

      id = R.id.add_post_description_text_input_layout;
      TextInputLayout addPostDescriptionTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (addPostDescriptionTextInputLayout == null) {
        break missingId;
      }

      id = R.id.add_post_title_edit_text;
      TextInputEditText addPostTitleEditText = ViewBindings.findChildViewById(rootView, id);
      if (addPostTitleEditText == null) {
        break missingId;
      }

      id = R.id.add_post_title_text_input_layout;
      TextInputLayout addPostTitleTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (addPostTitleTextInputLayout == null) {
        break missingId;
      }

      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.create_post_form;
      LinearLayout createPostForm = ViewBindings.findChildViewById(rootView, id);
      if (createPostForm == null) {
        break missingId;
      }

      id = R.id.create_post_image;
      ImageView createPostImage = ViewBindings.findChildViewById(rootView, id);
      if (createPostImage == null) {
        break missingId;
      }

      id = R.id.description_text_view;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.main;
      ConstraintLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.save_button;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.title_text_view;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new FragmentCreatePostBinding((ScrollView) rootView, addPostDescriptionEditText,
          addPostDescriptionTextInputLayout, addPostTitleEditText, addPostTitleTextInputLayout,
          cancelButton, createPostForm, createPostImage, descriptionTextView, main, saveButton,
          titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
