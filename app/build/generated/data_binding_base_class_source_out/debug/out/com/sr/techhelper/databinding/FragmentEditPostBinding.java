// Generated by view binder compiler. Do not edit!
package com.sr.techhelper.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.sr.techhelper.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditPostBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final TextInputEditText editPostDescriptionEditText;

  @NonNull
  public final TextInputLayout editPostDescriptionTextInputLayout;

  @NonNull
  public final LinearLayout editPostForm;

  @NonNull
  public final ImageView editPostImage;

  @NonNull
  public final TextInputEditText editPostTitleEditText;

  @NonNull
  public final TextInputLayout editPostTitleTextInputLayout;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final TextView titleTextView;

  private FragmentEditPostBinding(@NonNull ScrollView rootView, @NonNull Button cancelButton,
      @NonNull Button deleteButton, @NonNull TextView descriptionTextView,
      @NonNull TextInputEditText editPostDescriptionEditText,
      @NonNull TextInputLayout editPostDescriptionTextInputLayout,
      @NonNull LinearLayout editPostForm, @NonNull ImageView editPostImage,
      @NonNull TextInputEditText editPostTitleEditText,
      @NonNull TextInputLayout editPostTitleTextInputLayout, @NonNull ConstraintLayout main,
      @NonNull Button saveButton, @NonNull TextView titleTextView) {
    this.rootView = rootView;
    this.cancelButton = cancelButton;
    this.deleteButton = deleteButton;
    this.descriptionTextView = descriptionTextView;
    this.editPostDescriptionEditText = editPostDescriptionEditText;
    this.editPostDescriptionTextInputLayout = editPostDescriptionTextInputLayout;
    this.editPostForm = editPostForm;
    this.editPostImage = editPostImage;
    this.editPostTitleEditText = editPostTitleEditText;
    this.editPostTitleTextInputLayout = editPostTitleTextInputLayout;
    this.main = main;
    this.saveButton = saveButton;
    this.titleTextView = titleTextView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_button;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.delete_button;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.description_text_view;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.edit_post_description_edit_text;
      TextInputEditText editPostDescriptionEditText = ViewBindings.findChildViewById(rootView, id);
      if (editPostDescriptionEditText == null) {
        break missingId;
      }

      id = R.id.edit_post_description_text_input_layout;
      TextInputLayout editPostDescriptionTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (editPostDescriptionTextInputLayout == null) {
        break missingId;
      }

      id = R.id.edit_post_form;
      LinearLayout editPostForm = ViewBindings.findChildViewById(rootView, id);
      if (editPostForm == null) {
        break missingId;
      }

      id = R.id.edit_post_image;
      ImageView editPostImage = ViewBindings.findChildViewById(rootView, id);
      if (editPostImage == null) {
        break missingId;
      }

      id = R.id.edit_post_title_edit_text;
      TextInputEditText editPostTitleEditText = ViewBindings.findChildViewById(rootView, id);
      if (editPostTitleEditText == null) {
        break missingId;
      }

      id = R.id.edit_post_title_text_input_layout;
      TextInputLayout editPostTitleTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (editPostTitleTextInputLayout == null) {
        break missingId;
      }

      id = R.id.main;
      ConstraintLayout main = ViewBindings.findChildViewById(rootView, id);
      if (main == null) {
        break missingId;
      }

      id = R.id.save_button;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.title_text_view;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      return new FragmentEditPostBinding((ScrollView) rootView, cancelButton, deleteButton,
          descriptionTextView, editPostDescriptionEditText, editPostDescriptionTextInputLayout,
          editPostForm, editPostImage, editPostTitleEditText, editPostTitleTextInputLayout, main,
          saveButton, titleTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
